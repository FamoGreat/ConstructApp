@model ExpenseListVM

<partial name="_Notification" />

<div class="container mt-4">
    <div class="row">
        <div class="col-sm-12 col-md-6 mb-2 mb-md-0">
            <p>
                <a class="btn btn-primary" asp-action="Create" asp-controller="Expense">Add Expense Request</a>
            </p>
        </div>
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">List of my Expenses Requests</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="dataTable" class="table table-bordered" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Project Name</th>
                        <th>Expense Type</th>
                        <th>Amount</th>
                        <th>Created By</th>
                        <th>Date</th>
                        <th>Status</th>
                        <th>Description</th>
                        <th>Document</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var expense in Model.Expenses)
                    {
                        <tr>
                            <td>@(Model.Expenses.IndexOf(expense) + 1)</td>
                            <td>@expense.Project?.ProjectName</td>
                            <td>@expense.ExpenseType?.Name</td>
                            <td>@expense.ExpenseAmount</td>
                            <td>@expense.CreatedBy</td>
                            <td>@expense.CreatedDate.ToString("MM/dd/yyyy")</td>
                            <td>@expense.ApprovalStatus</td>
                            <td>
                                <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#descriptionModal" data-description="@expense.Description">
                                    View
                                </button>
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(expense.SupportiveDocumentPath))
                                {
                                    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#documentModal_@expense.Id">
                                        View
                                    </button>
                                }
                                else
                                {
                                    <span>No Document</span>
                                }
                            </td>
                            <td>
                                <div class="d-flex">
                                    <a href="@Url.Action("Edit", "Expense", new { id = expense.Id })" class="m-2 btn btn-sm btn-primary">
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-edit mr-1"></i>
                                        </div>
                                    </a>
                                    <a onclick="confirmDelete(@expense.Id)" class="m-2 btn btn-sm btn-danger">
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-trash-alt mr-1"></i>
                                        </div>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }

                    @if (!Model.Expenses.Any())
                    {
                        <tr>
                            <td colspan="10" class="text-center">No request found</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal for viewing description -->
<div class="modal fade" id="descriptionModal" tabindex="-1" role="dialog" aria-labelledby="descriptionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="descriptionModalLabel">Expense Description</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="descriptionContent"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for viewing document -->
@foreach (var expense in Model.Expenses)
{
    @if (!string.IsNullOrEmpty(expense.SupportiveDocumentPath))
    {
        <div class="modal fade" id="documentModal_@expense.Id" tabindex="-1" role="dialog" aria-labelledby="documentModalLabel_@expense.Id" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="documentModalLabel_@expense.Id">Supportive Document</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @if (expense.SupportiveDocumentPath.EndsWith(".pdf"))
                        {
                            <embed src="~/supportive_documents/@expense.SupportiveDocumentPath" type="application/pdf" width="100%" height="600px" />
                        }
                        else if (expense.SupportiveDocumentPath.EndsWith(".jpg") || expense.SupportiveDocumentPath.EndsWith(".jpeg") || expense.SupportiveDocumentPath.EndsWith(".png"))
                        {
                            <img src="~/supportive_documents/@expense.SupportiveDocumentPath" class="img-fluid" alt="Supportive Document" />
                        }
                        else
                        {
                            <p>Unsupported document format</p>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    <script>
        $(document).ready(function () {
            var table = $('#dataTable').DataTable({
                paging: true,
                searching: true
            });

            $('#expenseSearch').on('keyup', function () {
                table.search(this.value).draw();
            });

            $('#descriptionModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var description = button.data('description');
                var modal = $(this);
                modal.find('#descriptionContent').text(description);
            });
        });

        function confirmDelete(id) {
            Swal.fire({
                title: "Confirmation",
                text: "Are you sure you want to delete this expense?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Expense/Delete/' + id,
                        type: "DELETE",
                        success: function (data) {
                            if (data.success) {
                                toastr.success(data.message);
                                $('#dataTable').DataTable().ajax.reload();
                            } else {
                                toastr.error(data.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            toastr.error("Error occurred while deleting: " + error);
                        }
                    });
                }
            });
        }

    </script>
}
