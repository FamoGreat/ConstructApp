@model List<ExpenseType>


<partial name="_Notification" />

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Expense Type</h6>
    </div>
    <div class="card-body">
        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ExpenseTypePermissions.Create)).Result.Succeeded)
        {
            <form method="post" asp-action="CreateExpenseType" asp-controller="ExpenseType" class="mb-3">
                <div class="input-group">
                    <input name="expenseTypeName" class="form-control mr-2" style="width: 60%;" placeholder="Enter Expense Type Name">
                    <span class="input-group-btn">
                        <button type="submit" class="btn btn-primary">Create ExpenseType</button>
                    </span>
                </div>
            </form>
        }
      
        <div class="table-responsive">
            <table class="table table-striped table-bordered" id="dataTable">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Expense Type</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var expenseType in Model)
                    {
                        <tr>
                            <td>@(Model.IndexOf(expenseType) + 1)</td>
                            <td>@expenseType.Name</td>
                            <td>
                                <div class="d-flex align-items-center" aria-label="Role Actions">
                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ExpenseTypePermissions.Edit)).Result.Succeeded)
                                    {
                                        <div class="mr-2">
                                            <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#editRoleModal_@expenseType.Id">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                        </div>
                                    }
                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ExpenseTypePermissions.Delete)).Result.Succeeded)
                                    {
                                        <div>
                                            <form method="post" asp-action="DeleteExpenseType" asp-controller="ExpenseType"
                                                  data-confirm-title="Are you sure?" data-confirm-text="This action cannot be undone."
                                                  data-confirm-type="warning">
                                                <input type="hidden" name="expenseTypeId" value="@expenseType.Id" />
                                                <button type="submit" class="btn btn-danger btn-sm">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    }
                               

                                   
                                </div>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>

@foreach (var expenseType in Model)
{
    <!-- Edit Role Modal -->
    <div class="modal fade" id="editRoleModal_@expenseType.Id" tabindex="-1" role="dialog" aria-labelledby="editExpenseTypeModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editExpenseTypeModal">Edit Expense TypeName</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form asp-action="EditExpenseType" asp-controller="ExpenseType" method="post">
                    <div class="modal-body">

                        <input type="hidden" name="expenseTypeId" value="@expenseType.Id" />
                        <div class="form-group">
                            <label for="expenseTypeName_@expenseType.Id">Expense Type</label>
                            <input id="expenseTypeName_@expenseType.Id" name="expenseType" class="form-control" value="@expenseType.Name">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary"><i class="fas fa-save"></i> Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const forms = document.querySelectorAll("[data-confirm-title]");
            forms.forEach(form => {
                form.addEventListener("submit", function (event) {
                    event.preventDefault();
                    const title = form.getAttribute("data-confirm-title");
                    const text = form.getAttribute("data-confirm-text") || "";
                    const type = form.getAttribute("data-confirm-type") || "info";

                    Swal.fire({
                        title: title,
                        text: text,
                        icon: type,
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            form.submit();
                        }
                    });
                });
            });
        });
    </script>
}
